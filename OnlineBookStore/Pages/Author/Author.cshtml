@page
@model OnlineBookStore.Pages.Author.AuthorModel

<link rel="stylesheet" type="text/css" href="~/css/Author/author.css" />
<script src="~/js/modal.js"></script>
<script src="~/js/confirmDelete.js"></script>

@{
	ViewData["DeleteTitle"] = "Author";
}

<div class="author-container page-container">
	<div class="title page-title">
		<h2>Author</h2>

		<div class="mid">
			<div></div>
			<input type="text" id="searchInput" placeholder="Search by name..." class="form-control" />
		</div>

		<div class="add-author">
			<button type="submit" asp-page-handler="Create" class="btn-outline-primary open-modal">Add Author</button>
		</div>
	</div>

	<div class="author-table">
		<table class="table">
			<thead>
				<tr>
					<th hidden>AuthorId</th>
					<th>Author Name</th>
					<th>Actions</th>
				</tr>
			</thead>

			<tbody>
				@if (Model.Authors != null && Model.Authors.Any())
				{
					@foreach (var author in Model.Authors)
					{
						<tr>
							<td hidden class="authorId" name="id">@author.AuthorId</td>
							<td>@author.AuthorName</td>
							<td>
								<button type="button" asp-page-handler="Edit" class="btn btn-secondary edit-btn"
										data-id="@author.AuthorId"
										data-name="@author.AuthorName">
									Edit
								</button>
								<button type="button" asp-page-handler="Delete" class="btn btn-danger del-butn open-delete-modal"
										data-id="@author.AuthorId"
										data-name="@author.AuthorName">
									Delete
								</button>
							</td>
						</tr>
					}
				}
				else
				{
					<tr class="empty">
						<td colspan="2">No Authors found</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<!--Modal-->
<div id="modal" class="modal" draggable="true" role="dialog" aria-modal="true" aria-labelledby="modalTitle">
	<div class="modal-content">
		<form method="post" class="new-form">
			@Html.AntiForgeryToken()
			<!-- Include Header-->
			@await Html.PartialAsync("../Shared/_ModalHeader.cshtml", "Add Author")

			<!-- Modal Body (Input Fields) -->
			<div class="modal-body">

				<div class="input-group">
					<label for="authorName">Author Name</label>
					<input type="text" asp-for="Author.AuthorName" id="authorName" class="input-field" placeholder="Enter author name" required />
				</div>
			</div>

			<!-- Include Footer -->
			@await Html.PartialAsync("../Shared/_ModalFooter.cshtml", "Save")
		</form>
	</div>
</div>

<div id="e-modal" class="modal" draggable="true" role="dialog" aria-modal="true" aria-labelledby="modalTitle">
	<div class="modal-content">
		<form method="post" asp-page-handler="Edit" class="edit-form">
			@Html.AntiForgeryToken()
			<!-- Include Header-->
			@await Html.PartialAsync("../Shared/_ModalHeader.cshtml", "Edit Author")

			<!-- Modal Body (Input Fields) -->
			<div class="modal-body">

				<div class="input-group">
					<label for="authorName">Author Name</label>
					<input type="text" name="Author.AuthorName" class="input-field authorName" placeholder="Enter author name" required />
					<input type="hidden" name="id" class="authorId" id="authorId" />
				</div>
			</div>

			<!-- Include Footer -->
			@await Html.PartialAsync("../Shared/_ModalFooter.cshtml","Update")
		</form>
	</div>
</div>

@await Html.PartialAsync("../Shared/_ConfirmDelete.cshtml")

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		var searchInput = document.getElementById("searchInput");

		searchInput.addEventListener("keyup", function () {
			const filter = this.value.toLowerCase();
			document.querySelectorAll(".author-table tbody tr").forEach(row => {
				const name = row.querySelectorAll("td")[1].textContent.toLowerCase();
				row.style.display = name.includes(filter) ? "" : "none";
			});
		});

	</script>

	<script>
		$(document).ready(function () {

			var fun = function(){
				$('#e-modal').css("display", "none");
			};

			$(".edit-btn").on("click", function () {
				const authorId = $(this).data("id");

				$('.close, .btn-cancel').on("click", fun);

				$.ajax({
					url: 'Author?handler=Edit',
					type: 'GET',
					data: { id: authorId },
					dataType: 'json',
					success: function (dataa) {
						if (dataa.code === "300") {
							alert(dataa.message || "Author not found.");
							return;
						}

						// Set values
						$("#authorId").val(dataa.authorId);
						$(".authorName").val(dataa.authorName);

						// Set or create hidden input for AuthorId
						let hiddenInput = $("#authorId");
						if (hiddenInput.length === 0) {
							hiddenInput = $("<input>", {
								type: "hidden",
								id: "authorId",
								name: "Author.AuthorId"
							});
							$(".edit-form").append(hiddenInput);
						}
						hiddenInput.val(dataa.authorId);

						// Set form handler
						$(".edit-form").attr("asp-page-handler", "Edit");

						// Show modal
						$("#e-modal").css("display", "flex");
						$(".authorName").focus();
					},
					error: function (ex) {
						console.log('error'+ex.message);
						alert("An error occurred while fetching author data.");
					}
				});
			});
			
		});
	</script>

}